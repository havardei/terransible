---
- hosts: os_metadata_my_server_role=database
  become: true
  tasks:
  - name: Run the equivalent of "apt-get update" as a separate step
    apt:
      update_cache: yes

  - name: Install Mysql, also starts the service
    apt:
      name: mariadb-server

  - name: Install PyMySQL, needed by Ansible MySQL module
    apt:
      name: python3-pymysql

  - name: Set Mysql bind-address
    ini_file:
      path: /etc/mysql/mariadb.conf.d/90-server.cnf
      section: mysqld
      option: bind-address
      value: "{{ ansible_default_ipv4.address }}"
      backup: yes
    notify:
    - restart Mysql

  - name: Make sure Mysql is running and enabled
    systemd:
      name: mysql
      state: started
      enabled: yes

  - name: copy .my.cnf file with root password credentials
    template: 
      src: templates/.my.j2
      dest: /root/.my.cnf
      owner: root
      mode: 0600

  - name: Set root user password
    ansible.builtin.shell: "mysqladmin --user=root password {{mysql_root_password}}"

  - name: Create a new database
    mysql_db:
      login_user: root
      login_password: "{{mysql_root_password}}"
      login_unix_socket: /run/mysqld/mysqld.sock
      name: ourdb
      state: present

  - name: Create database user
    mysql_user:
      login_user: root
      login_password: "{{mysql_root_password}}"
      login_unix_socket: /run/mysqld/mysqld.sock
      name: ourdb
      host: "%"
      password: "{{db_passwd}}"
      priv: 'ourdb.*:ALL'
      state: present

  handlers:
  - name: restart Mysql
    systemd:
      name: "mariadb"
      state: restarted


- hosts: os_metadata_my_server_role=web
  become: true
  vars:
    db_ip: "{{ hostvars['db-0'].ip }}"
  tasks:
  - name: Install Apache
    apt:
      name: apache2
      state: present

  - name: Install php
    apt:
      name: php
      state: present

  - name: Install libapache2-mod-php
    apt:
      name: libapache2-mod-php
      state: present

  - name: Install php-mysql
    apt:
      name: php-mysql
      state: present
    notify:
    - restart Apache


  - name: Copy index.php template
    ansible.builtin.template:
      src: 'templates/index.j2'
      dest: '/var/www/html/index.php'

  - name: remove placeholder file
    ansible.builtin.shell: "rm -f /var/www/html/index.html"

  handlers:
  - name: restart Apache
    systemd:
      name: "apache2"
      state: restarted
